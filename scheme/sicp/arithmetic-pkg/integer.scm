(define integer-tag 'integer)
(define (integer? x)
  (eq? (type-tag x) integer-tag))

(define (install-integer-package)
  (define (tag x)
    (attach-tag integer-tag x))
  (put 'add '(integer integer)
       (lambda (x y) (tag (round (+ x y)))))
  (put 'sub '(integer integer)
       (lambda (x y) (tag (round (- x y)))))
  (put 'mul '(integer integer)
       (lambda (x y) (tag (round (* x y)))))
  (put 'div '(integer integer)
       (lambda (x y) (tag (round (/ x y)))))
  (put 'num-eq? '(integer integer)
       (lambda (x y) (= x y)))
  (put '=zero? '(integer)
       (lambda (x) (= x 0)))
  (put 'make 'integer
       (lambda (x) (tag x)))
  'done)
